{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sid/Js/New/Insta/store-gql/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sid/Js/New/Insta/store-gql/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/sid/Js/New/Insta/store-gql/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/sid/Js/New/Insta/store-gql/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sid/Js/New/Insta/store-gql/Advanced-React-master/sick-fits/frontend/components/SignIn.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\\n    authenticateUserWithPassword(email: $email, password: $password) {\\n      ... on UserAuthenticationWithPasswordSuccess {\\n        item {\\n          id\\n          email\\n          name\\n        }\\n      }\\n      ... on UserAuthenticationWithPasswordFailure {\\n        code\\n        message\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForms from \"../lib/useForms\";\nimport DisplayError from \"./ErrorMessage\";\nimport Form from \"./styles/Form\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nvar SIGNIN_MUTATION = gql(_templateObject());\nexport default function SignIn() {\n  _s();\n\n  var _useForms = useForms({\n    email: \"\",\n    password: \"\"\n  }),\n      inputs = _useForms.inputs,\n      handleChange = _useForms.handleChange,\n      resetForm = _useForms.resetForm;\n\n  var _useMutation = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signin = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return signin();\n\n            case 3:\n              resetForm();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var error = (data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword.__typename) === \"UserAuthenticationWithPasswordFailure\" ? data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword : undefined;\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayError, {\n      error: data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter your password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign In!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"iM3oxFxokFFPfwjP/LppDxliB8Y=\", false, function () {\n  return [useForms, useMutation];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/sid/Js/New/Insta/store-gql/Advanced-React-master/sick-fits/frontend/components/SignIn.js"],"names":["useMutation","gql","useForms","DisplayError","Form","CURRENT_USER_QUERY","SIGNIN_MUTATION","SignIn","email","password","inputs","handleChange","resetForm","variables","refetchQueries","query","signin","data","loading","handleSubmit","e","preventDefault","error","authenticateUserWithPassword","__typename","undefined","console","log"],"mappings":"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","sourcesContent":["import { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForms from \"../lib/useForms\";\nimport DisplayError from \"./ErrorMessage\";\nimport Form from \"./styles/Form\";\nimport { CURRENT_USER_QUERY } from \"./User\";\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    authenticateUserWithPassword(email: $email, password: $password) {\n      ... on UserAuthenticationWithPasswordSuccess {\n        item {\n          id\n          email\n          name\n        }\n      }\n      ... on UserAuthenticationWithPasswordFailure {\n        code\n        message\n      }\n    }\n  }\n`;\n\nexport default function SignIn() {\n  const { inputs, handleChange, resetForm } = useForms({\n    email: \"\",\n    password: \"\",\n  });\n  const [signin, { data, loading }] = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{ query: CURRENT_USER_QUERY }],\n  });\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await signin();\n    resetForm();\n  };\n  const error =\n    data?.authenticateUserWithPassword.__typename ===\n    \"UserAuthenticationWithPasswordFailure\"\n      ? data?.authenticateUserWithPassword\n      : undefined;\n  console.log(data);\n  return (\n    <Form method=\"POST\" onSubmit={handleSubmit}>\n      <h2>Sign In</h2>\n      <DisplayError error={data?.authenticateUserWithPassword} />\n      <fieldset>\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your Email Address\"\n            autoComplete=\"email\"\n            value={inputs.email}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            autoComplete=\"password\"\n            value={inputs.password}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">Sign In!</button>\n      </fieldset>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}