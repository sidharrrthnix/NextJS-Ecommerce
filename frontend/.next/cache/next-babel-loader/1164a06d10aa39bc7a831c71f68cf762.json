{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sid/Js/New/Insta/store-gql/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sid/Js/New/Insta/store-gql/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/sid/Js/New/Insta/store-gql/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/sid/Js/New/Insta/store-gql/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sid/Js/New/Insta/store-gql/Advanced-React-master/sick-fits/frontend/components/RequestReset.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation REQUEST_RESET_MUTATION($email: String!) {\\n    sendUserPasswordResetLink(email: $email) {\\n      code\\n      message\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForms from \"../lib/useForms\";\nimport DisplayError from \"./ErrorMessage\";\nimport Form from \"./styles/Form\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nvar REQUEST_RESET_MUTATION = gql(_templateObject());\nexport default function RequestReset() {\n  _s();\n\n  var _useForms = useForms({\n    email: \"\"\n  }),\n      inputs = _useForms.inputs,\n      handleChange = _useForms.handleChange,\n      resetForm = _useForms.resetForm;\n\n  var _useMutation = useMutation(REQUEST_RESET_MUTATION, {\n    variables: inputs // refetchQueries: [{ query: CURRENT_USER_QUERY }],\n\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      reset = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return reset()[\"catch\"](console.error);\n\n            case 3:\n              res = _context.sent;\n              console.log(res);\n              resetForm();\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); //   const error =\n  //     data?.authenticateUserWithPassword.__typename ===\n  //     \"UserAuthenticationWithPasswordFailure\"\n  //       ? data?.authenticateUserWithPassword\n  //       : undefined;\n\n\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [(data === null || data === void 0 ? void 0 : data.sendUserPasswordResetLink) === null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Success! check your email \", inputs.email, \" from a link!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RequestReset, \"QI71fcwXEs5hkJOyoAgctZI28vw=\", false, function () {\n  return [useForms, useMutation];\n});\n\n_c = RequestReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestReset\");","map":{"version":3,"sources":["/Users/sid/Js/New/Insta/store-gql/Advanced-React-master/sick-fits/frontend/components/RequestReset.js"],"names":["useMutation","gql","useForms","DisplayError","Form","CURRENT_USER_QUERY","REQUEST_RESET_MUTATION","RequestReset","email","inputs","handleChange","resetForm","variables","reset","data","loading","error","handleSubmit","e","preventDefault","console","res","log","sendUserPasswordResetLink"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AAEA,IAAMC,sBAAsB,GAAGL,GAAH,mBAA5B;AASA,eAAe,SAASM,YAAT,GAAwB;AAAA;;AAAA,kBACOL,QAAQ,CAAC;AACnDM,IAAAA,KAAK,EAAE;AAD4C,GAAD,CADf;AAAA,MAC7BC,MAD6B,aAC7BA,MAD6B;AAAA,MACrBC,YADqB,aACrBA,YADqB;AAAA,MACPC,SADO,aACPA,SADO;;AAAA,qBAIKX,WAAW,CACnDM,sBADmD,EAEnD;AACEM,IAAAA,SAAS,EAAEH,MADb,CAEE;;AAFF,GAFmD,CAJhB;AAAA;AAAA,MAI9BI,KAJ8B;AAAA;AAAA,MAIrBC,IAJqB,kBAIrBA,IAJqB;AAAA,MAIfC,OAJe,kBAIfA,OAJe;AAAA,MAINC,KAJM,kBAINA,KAJM;;AAWrC,MAAMC,YAAY;AAAA,wEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,CAAC,CAACC,cAAF;AADmB;AAAA,qBAEDN,KAAK,WAAL,CAAcO,OAAO,CAACJ,KAAtB,CAFC;;AAAA;AAEbK,cAAAA,GAFa;AAGnBD,cAAAA,OAAO,CAACE,GAAR,CAAYD,GAAZ;AACAV,cAAAA,SAAS;;AAJU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZM,YAAY;AAAA;AAAA;AAAA,KAAlB,CAXqC,CAiBrC;AACA;AACA;AACA;AACA;;;AACAG,EAAAA,OAAO,CAACE,GAAR,CAAYR,IAAZ;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAEG,YAA9B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAED;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,iBACG,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAES,yBAAN,MAAoC,IAApC,iBACC;AAAA,iDAA8Bd,MAAM,CAACD,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAIE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,0BAHd;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,KAAK,EAAEC,MAAM,CAACD,KALhB;AAME,UAAA,QAAQ,EAAEE;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAgBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA/CuBH,Y;UACsBL,Q,EAGFF,W;;;KAJpBO,Y","sourcesContent":["import { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForms from \"../lib/useForms\";\nimport DisplayError from \"./ErrorMessage\";\nimport Form from \"./styles/Form\";\nimport { CURRENT_USER_QUERY } from \"./User\";\n\nconst REQUEST_RESET_MUTATION = gql`\n  mutation REQUEST_RESET_MUTATION($email: String!) {\n    sendUserPasswordResetLink(email: $email) {\n      code\n      message\n    }\n  }\n`;\n\nexport default function RequestReset() {\n  const { inputs, handleChange, resetForm } = useForms({\n    email: \"\",\n  });\n  const [reset, { data, loading, error }] = useMutation(\n    REQUEST_RESET_MUTATION,\n    {\n      variables: inputs,\n      // refetchQueries: [{ query: CURRENT_USER_QUERY }],\n    }\n  );\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const res = await reset().catch(console.error);\n    console.log(res);\n    resetForm();\n  };\n  //   const error =\n  //     data?.authenticateUserWithPassword.__typename ===\n  //     \"UserAuthenticationWithPasswordFailure\"\n  //       ? data?.authenticateUserWithPassword\n  //       : undefined;\n  console.log(data);\n  return (\n    <Form method=\"POST\" onSubmit={handleSubmit}>\n      <h2>Password Reset</h2>\n      <DisplayError error={error} />\n      <fieldset>\n        {data?.sendUserPasswordResetLink === null && (\n          <p>Success! check your email {inputs.email} from a link!</p>\n        )}\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your Email Address\"\n            autoComplete=\"email\"\n            value={inputs.email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Request Reset</button>\n      </fieldset>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}