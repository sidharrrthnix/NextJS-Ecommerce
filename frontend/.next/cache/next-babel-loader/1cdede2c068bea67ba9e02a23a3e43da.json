{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sid/Js/New/Insta/store-gql/Advanced-React-master/sick-fits/frontend/components/Checkout.js\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useRouter } from \"next/dist/client/router\";\nimport { Elements, CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport SickButton from \"./styles/SickButton\";\nimport nProgress from \"nprogress\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/client\";\nimport { useCart } from \"../lib/cartState\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);display:grid;grid-gap:1rem;padding:1rem;border-radius:0.5rem;\"]);\nconst CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token: String!) {\n    checkout(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState();\n  const stripe = useStripe();\n  const router = useRouter();\n  const {\n    closeCart\n  } = useCart();\n  const elements = useElements();\n  const [checkout, {\n    error: graphQlError\n  }] = useMutation(CREATE_ORDER_MUTATION, {\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"we got to do something\");\n    setLoading(true);\n    nProgress.start();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n    console.log(paymentMethod);\n\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return;\n    }\n\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id\n      }\n    });\n    console.log(\"ordered\", order);\n    router.push({\n      pathname: \"/order/[id]\",\n      query: {\n        id: order.data.checkout.id\n      }\n    });\n    closeCart();\n    setLoading(false);\n    nProgress.done();\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), graphQlError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: graphQlError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Checkout out now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\nexport { Checkout };","map":{"version":3,"sources":["/Users/sid/Js/New/Insta/store-gql/Advanced-React-master/sick-fits/frontend/components/Checkout.js"],"names":["styled","useState","loadStripe","useRouter","Elements","CardElement","useElements","useStripe","SickButton","nProgress","gql","useMutation","useCart","CURRENT_USER_QUERY","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","router","closeCart","elements","checkout","graphQlError","refetchQueries","query","handleSubmit","e","preventDefault","console","log","start","paymentMethod","createPaymentMethod","type","card","getElement","done","order","variables","token","id","push","pathname","data","fontSize","message","Checkout"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,SAJF,QAKO,yBALP;AAMA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,MAAMC,kBAAkB,GAAGd,MAAM,CAACe,IAAV;AAAA;AAAA;AAAA,iJAAxB;AAQA,MAAMC,qBAAqB,GAAGN,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,MAAMO,SAAS,GAAGf,UAAU,CAACgB,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B;;AACA,SAASC,YAAT,GAAwB;AACtB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBtB,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACuB,OAAD;AAAA,OAAUC;AAAV,MAAwBxB,QAAQ,EAAtC;AACA,QAAMyB,MAAM,GAAGnB,SAAS,EAAxB;AACA,QAAMoB,MAAM,GAAGxB,SAAS,EAAxB;AACA,QAAM;AAAEyB,IAAAA;AAAF,MAAgBhB,OAAO,EAA7B;AACA,QAAMiB,QAAQ,GAAGvB,WAAW,EAA5B;AACA,QAAM,CAACwB,QAAD,EAAW;AAAER,IAAAA,KAAK,EAAES;AAAT,GAAX,IAAsCpB,WAAW,CACrDK,qBADqD,EAErD;AAAEgB,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEpB;AAAT,KAAD;AAAlB,GAFqD,CAAvD;;AAIA,iBAAeqB,YAAf,CAA4BC,CAA5B,EAA+B;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAb,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAhB,IAAAA,SAAS,CAAC8B,KAAV;AACA,UAAM;AAAEjB,MAAAA,KAAF;AAASkB,MAAAA;AAAT,QAA2B,MAAMd,MAAM,CAACe,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAEd,QAAQ,CAACe,UAAT,CAAoBvC,WAApB;AAF0D,KAA3B,CAAvC;AAIAgC,IAAAA,OAAO,CAACC,GAAR,CAAYE,aAAZ;;AACA,QAAIlB,KAAJ,EAAW;AACTC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAb,MAAAA,SAAS,CAACoC,IAAV;AACA;AACD;;AACD,UAAMC,KAAK,GAAG,MAAMhB,QAAQ,CAAC;AAC3BiB,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAER,aAAa,CAACS;AAAvB;AADgB,KAAD,CAA5B;AAGAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBQ,KAAvB;AACAnB,IAAAA,MAAM,CAACuB,IAAP,CAAY;AACVC,MAAAA,QAAQ,EAAE,aADA;AAEVlB,MAAAA,KAAK,EAAE;AAAEgB,QAAAA,EAAE,EAAEH,KAAK,CAACM,IAAN,CAAWtB,QAAX,CAAoBmB;AAA1B;AAFG,KAAZ;AAIArB,IAAAA,SAAS;AACTH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAhB,IAAAA,SAAS,CAACoC,IAAV;AACD;;AACD,sBACE,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEX,YAA9B;AAAA,eACGZ,KAAK,iBAAI;AAAG,MAAA,KAAK,EAAE;AAAE+B,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAAA,gBAA6B/B,KAAK,CAACgC;AAAnC;AAAA;AAAA;AAAA;AAAA,YADZ,EAEGvB,YAAY,iBAAI;AAAG,MAAA,KAAK,EAAE;AAAEsB,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAAA,gBAA6BtB,YAAY,CAACuB;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFnB,eAGE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AACD,SAASC,QAAT,GAAoB;AAClB,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEtC,SAAlB;AAAA,2BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AACD,SAASsC,QAAT","sourcesContent":["import styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useRouter } from \"next/dist/client/router\";\nimport {\n  Elements,\n  CardElement,\n  useElements,\n  useStripe,\n} from \"@stripe/react-stripe-js\";\nimport SickButton from \"./styles/SickButton\";\nimport nProgress from \"nprogress\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/client\";\nimport { useCart } from \"../lib/cartState\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nconst CheckoutFormStyles = styled.form`\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  display: grid;\n  grid-gap: 1rem;\n  padding: 1rem;\n  border-radius: 0.5rem;\n`;\nconst CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token: String!) {\n    checkout(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\nfunction CheckoutForm() {\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState();\n  const stripe = useStripe();\n  const router = useRouter();\n  const { closeCart } = useCart();\n  const elements = useElements();\n  const [checkout, { error: graphQlError }] = useMutation(\n    CREATE_ORDER_MUTATION,\n    { refetchQueries: [{ query: CURRENT_USER_QUERY }] }\n  );\n  async function handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"we got to do something\");\n    setLoading(true);\n    nProgress.start();\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement),\n    });\n    console.log(paymentMethod);\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return;\n    }\n    const order = await checkout({\n      variables: { token: paymentMethod.id },\n    });\n    console.log(\"ordered\", order);\n    router.push({\n      pathname: \"/order/[id]\",\n      query: { id: order.data.checkout.id },\n    });\n    closeCart();\n    setLoading(false);\n    nProgress.done();\n  }\n  return (\n    <CheckoutFormStyles onSubmit={handleSubmit}>\n      {error && <p style={{ fontSize: 12 }}>{error.message}</p>}\n      {graphQlError && <p style={{ fontSize: 12 }}>{graphQlError.message}</p>}\n      <CardElement />\n      <SickButton>Checkout out now</SickButton>\n    </CheckoutFormStyles>\n  );\n}\nfunction Checkout() {\n  return (\n    <Elements stripe={stripeLib}>\n      <CheckoutForm />\n    </Elements>\n  );\n}\nexport { Checkout };\n"]},"metadata":{},"sourceType":"module"}