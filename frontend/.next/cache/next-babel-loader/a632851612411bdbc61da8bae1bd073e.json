{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/sid/Js/dream/store-gql/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sid/Js/dream/store-gql/Advanced-React-master/sick-fits/frontend/components/Products.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\\n    allProducts(first: $first, skip: $skip) {\\n      id\\n      name\\n      description\\n      price\\n      photo {\\n        id\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport { perPage } from \"../config\";\nimport Product from \"./Product\";\nexport var ALL_PRODUCTS_QUERY = gql(_templateObject());\nvar ProductListStyle = styled.div.withConfig({\n  displayName: \"Products__ProductListStyle\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;\"]);\n_c = ProductListStyle;\n\nvar Products = function Products(_ref) {\n  _s();\n\n  var page = _ref.page;\n\n  var _useQuery = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, _this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductListStyle, {\n      children: data.allProducts.map(function (product) {\n        return /*#__PURE__*/_jsxDEV(Product, {\n          product: product\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Products, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Products;\nexport default Products;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductListStyle\");\n$RefreshReg$(_c2, \"Products\");","map":{"version":3,"sources":["/Users/sid/Js/dream/store-gql/Advanced-React-master/sick-fits/frontend/components/Products.js"],"names":["useQuery","gql","styled","perPage","Product","ALL_PRODUCTS_QUERY","ProductListStyle","div","Products","page","variables","skip","first","data","error","loading","message","allProducts","map","product","id"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,IAAMC,kBAAkB,GAAGJ,GAAH,mBAAxB;AAgBP,IAAMK,gBAAgB,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,iEAAtB;KAAMD,gB;;AAMN,IAAME,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACIT,QAAQ,CAACK,kBAAD,EAAqB;AAC5DK,IAAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAEF,IAAI,GAAGN,OAAP,GAAiBA,OAAzB;AAAkCS,MAAAA,KAAK,EAAET;AAAzC;AADiD,GAArB,CADZ;AAAA,MACrBU,IADqB,aACrBA,IADqB;AAAA,MACfC,KADe,aACfA,KADe;AAAA,MACRC,OADQ,aACRA,OADQ;;AAK7B,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,cAAMA,KAAK,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,WAAP;AACX,sBACE;AAAA,2BACE,QAAC,gBAAD;AAAA,gBACGH,IAAI,CAACI,WAAL,CAAiBC,GAAjB,CAAqB,UAACC,OAAD;AAAA,4BACpB,QAAC,OAAD;AAA0B,UAAA,OAAO,EAAEA;AAAnC,WAAcA,OAAO,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,iBADoB;AAAA,OAArB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAhBD;;GAAMZ,Q;UAC6BR,Q;;;MAD7BQ,Q;AAiBN,eAAeA,QAAf","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport { perPage } from \"../config\";\nimport Product from \"./Product\";\nexport const ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int) {\n    allProducts(first: $first, skip: $skip) {\n      id\n      name\n      description\n      price\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\nconst ProductListStyle = styled.div`\n  display: grid;\n  /* grid-auto-flow: column; */\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n`;\nconst Products = ({ page }) => {\n  const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: { skip: page * perPage - perPage, first: perPage },\n  });\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error.message}</div>;\n  return (\n    <div>\n      <ProductListStyle>\n        {data.allProducts.map((product) => (\n          <Product key={product.id} product={product} />\n        ))}\n      </ProductListStyle>\n    </div>\n  );\n};\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}